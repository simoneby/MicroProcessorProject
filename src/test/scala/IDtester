import chisel3.iotesters.PeekPokeTester
import chisel3._
import org.scalatest.{FlatSpec, Matchers}

// TO RUN TESTS TYPE THIS IN TERMINAL "sbt test"




class IDTest(id: InstructionDecode) extends PeekPokeTester(id){

  //var instruction = Array.fill(32) {0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
  var instruction = "b000000001001011010100000000000000000".U  // 00000 000 1001 0110 1010 ----

  poke(id.io.instruction, instruction)
  step(1)
  expect(id.io.a, 0)
  expect(id.io.b, 0)
  expect(id.io.opcode, 0)
  expect(id.io.destAddr, 9)

}


class IDtester extends FlatSpec with Matchers{
  print("hello")
  "InstructionDecode" should "pass" in {
    chisel3.iotesters.Driver(()=> new InstructionDecode) {c => new IDTest(c)} should be (true) }
}

